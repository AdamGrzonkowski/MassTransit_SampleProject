using System.IO;
using System.Threading.Tasks;
using System;
using Xunit;
using Warehouse.Components.StateMachines;
using Automatonymous.Graphing;
using Automatonymous.Visualizer;

namespace Warehouse.UnitTests.StateMachines
{
    public class AllocationStateMachineTests
    {
        /// <summary>
        /// Generates .dot file with State Machine diagram.
        /// </summary>
        /// <remarks>
        /// Copy contents of file generated by this and paste them on the page: <see href="https://dreampuf.github.io/GraphvizOnline/"/>
        /// It will give you visualization of AllocationStateMachine
        /// </remarks>
        [Fact]
        public async Task GenerateStateMachineGraph()
        {
            var orderStateMachine = new AllocationStateMachine();

            var graph = orderStateMachine.GetGraph();

            var generator = new StateMachineGraphvizGenerator(graph);

            string dots = generator.CreateDotFile();
            var filePath = Path.Combine(Environment.CurrentDirectory, "AllocationStateMachine_graph.dot");
            await File.WriteAllTextAsync(filePath, dots);
        }
    }
}